<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 扫描组件(除控制层) -->
	<context:component-scan base-package="com.jingchao">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>


	<!-- 引入jdbc.properties -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>


	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>


	<!-- 开启事务的注解驱动 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>


	<!-- 配置SqlSessionFactoryBean，可以直接在Spring的IOC中获取SqlSessionFactory -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 设置MyBatis核心配置文件的路径 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 设置数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 设置类型别名所对应的包 -->
		<property name="typeAliasesPackage" value="com.jingchao.pojo"/>
		<!-- 设置映射文件的位置，只有当映射文件和接口的包名不一致的情况才设置 -->
		<!-- <property name="mapperLocations" value="classpath:mapper/*.xml"/> -->
		<!-- 配置插件 -->
		<!-- <property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor"/>
			</array>
		</property> -->

	</bean>


	<!-- 配置mapper接口的扫描，可以将指定包下面的所有mapper接口通过SqlSession创建代理实现类对象，并将这些对象交给IOC容器管理 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jingchao.mapper"/>
	</bean>

</beans>